/* Import Minion Concept font for logo */
@import url('https://fonts.googleapis.com/css2?family=Minion+Variable+Concept:wght@400..700&display=swap');

/* Overlap title styling for spaces page (smaller than main gallery) */
h1, .main-title, .main-title-ja, .main-title-en {
  font-family: 'Noto Serif JP', serif;
  font-size: 2rem;
  font-weight: 300;
  color: #222;
  margin: 0 0.5em 0 0;
  padding: 0;
  letter-spacing: 0.1em;
  z-index: 1;
}
.header-sub {
  font-family: 'Noto Serif JP', serif;
  font-size: 2rem;
  font-weight: 400;
  color: #888;
  margin-left: 0.5em;
  padding: 0;
  letter-spacing: 0.1em;
  position: relative;
  display: inline-block;
  z-index: 1;
}
.main-title-en, .overlap-en {
  color: #666;
  margin-right: 0.5em;
}
.main-title-ja {
  font-weight: 400;
  margin-right: 0.5em;
}
.overlap, .overlap-en {
  font-family: 'Noto Serif JP', serif;
  font-size: 2rem;
  font-weight: 400;
  color: #222;
  opacity: 0.13;
  pointer-events: none;
  z-index: 0;
  position: absolute;
  line-height: 1;
}
.overlap {
  left: 0.4em;
  top: 0.4em;
}
.overlap-en {
  left: 0.9em;
  top: 0;
}
h1 {
  position: relative;
  z-index: 1;
  font-size: 2rem;
  margin: 0;
}
.main-title-ja {
  font-weight: bold;
  margin-right: 0.5em;
  font-family: "Noto Serif JP", Arial, serif;
}
.main-title-en {
  font-size: 1.1rem;
  color: #888;
  font-family: "Noto Serif JP", Arial, serif;
  font-weight: 400;
  margin-right: 0.5em;
}
/* Tooltip for AI source */
.desc-tooltip {
  position: relative;
  cursor: pointer;
  display: inline-block;
  color: #888;
  font-size: 0.9em;
  margin-left: 4px;
}
.desc-tooltip-text {
  visibility: hidden;
  width: max-content;
  background: #222;
  color: #fff;
  text-align: left;
  border-radius: 4px;
  padding: 4px 8px;
  position: absolute;
  z-index: 10;
  bottom: 120%;
  left: 50%;
  transform: translateX(-50%);
  opacity: 0;
  transition: opacity 0.2s;
  font-size: 0.85em;
  white-space: nowrap;
}
.desc-tooltip:hover .desc-tooltip-text,
.desc-tooltip:focus .desc-tooltip-text {
  visibility: visible;
  opacity: 1;
}
/* Spaces Catalog Styles */
#spaces-app {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-height: 100vh;
  padding: 0;
  box-sizing: border-box;
  width: 100%;
}

.spaces-header {
  text-align: center;
  margin-bottom: 12px;
  width: 100%;
  max-width: 100%;
  background: #fff;
  position: sticky;
  top: 0;
  z-index: 100;
  box-shadow: 0 2px 10px rgba(0,0,0,0.04);
  padding: 4px 0 6px 0;
  border-bottom: 1px solid #eee;
}
.header-main {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  /* make header span full width so logo can sit at the corner */
  padding: 4px 12px 0 6px; /* small left padding to nudge off the very edge */
  max-width: none;
  margin: 0;
  width: 100%;
  box-sizing: border-box;
  gap: 10px;
  min-height: 48px;
}
.header-left {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem; /* tighten spacing so logo and nav sit closer to corner */
}

.overlap-wrap {
  position: relative;
  display: inline-block;
  transition: all 0.2s ease;
}

.overlap-wrap:hover {
  transform: translateY(-1px);
}

/* Logo container: single consolidated rule
   - use inline-flex to center SVGs vertically
   - set perspective and preserve-3d for 3D flip
   - nudge down slightly so baseline aligns with nav items
*/
.logo-container {
  position: relative;
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  width: 100px;
  height: auto;
  overflow: visible;
  perspective: 1000px;
  transform-style: preserve-3d;
  transform-origin: center center;
  margin-top: 6px;
}

/* Hover subtle lift applied to wrapper, not the container, so we don't interfere with 3D transforms */
.overlap-wrap:hover {
  transform: translateY(-1px);
}

/* Logo SVG styling */
.logo-svg {
  width: 100px;
  height: auto;
  display: block;
  transition: transform 0.35s cubic-bezier(.4,.0,.2,1);
  backface-visibility: hidden;
  will-change: transform;
}

/* ensure SVGs align vertically with text */
.logo-svg { vertical-align: middle; }

.logo-primary {
  opacity: 1;
  transform: rotateY(0deg);
}

.logo-secondary {
  opacity: 1; /* kept for smooth swap; both rendered, rely on rotation */
  position: absolute;
  top: 0;
  left: 0;
  transform: rotateY(180deg);
}

/* Ensure SVG faces do not show their backface and control stacking during flip */
.logo-svg, .logo-primary, .logo-secondary {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  will-change: transform;
}
.logo-primary { position: relative; z-index: 2; }
.logo-secondary { z-index: 1; }

/* When flipped, bring secondary forward */
.logo-flip .logo-primary { transform: rotateY(-180deg); z-index: 1; }
.logo-flip .logo-secondary { transform: rotateY(0deg); z-index: 2; }

/* 3D flip animation: handled via child transforms (logo-primary / logo-secondary) */

/* Active flip state */
.logo-flip .logo-primary { transform: rotateY(-180deg); }
.logo-flip .logo-secondary { transform: rotateY(0deg); }

/* Reduce font sizes inside header (navigation & language) */
.header-nav a, .lang-switcher, .lang-switcher button {
  font-size: 0.8rem;
  line-height: 1.2;
}

/* Tighten results summary if present under small header */
.results-summary { margin-top: 4px; }

/* Utility: prevent image selection flicker */
.logo-container img { user-select: none; }

@media (max-width: 600px) {
  .logo-container { width: 84px; }
  .logo-svg { width: 84px; }
  .header-main { padding: 4px 10px 0 10px; }
  .header-nav a, .lang-switcher button { font-size: 0.7rem; }
}



/* Semantic-targeted rules (useful if classes used inside SVG) */
.logo-flip .kanji-main.kanji-visible { animation: svgFlipOut 0.6s ease-in-out forwards; }
.logo-flip .kanji-alt.kanji-hidden { animation: svgFlipIn 0.6s ease-in-out forwards; }
.logo-flip .eng-main.eng-visible { animation: svgFlipOut 0.6s ease-in-out forwards; }
.logo-flip .eng-alt.eng-hidden { animation: svgFlipIn 0.6s ease-in-out forwards; }

/* Persistent state using semantic classes */
.logo-flip-persist .kanji-main.kanji-visible { opacity: 0; transform: rotateY(90deg) scale(0.1); }
.logo-flip-persist .kanji-alt.kanji-hidden { opacity: 1; transform: rotateY(0deg) scale(0.1); }
.logo-flip-persist .eng-main.eng-visible { opacity: 0; transform: rotateY(90deg) scale(1); }
.logo-flip-persist .eng-alt.eng-hidden { opacity: 1; transform: rotateY(0deg) scale(1); }


/* Keyframes for SVG text/element flip (used by the inline SVG on index.html)
   These were previously referenced but not defined; define simple rotateY/opactiy
   animations and ensure SVG text uses correct transform box/origin so 3D
   transforms behave similarly to the image-based flip used elsewhere. */
@keyframes svgFlipOut {
  0% { opacity: 1; transform: rotateY(0deg); }
  50% { opacity: 0; transform: rotateY(90deg); }
  100% { opacity: 0; transform: rotateY(180deg); }
}

@keyframes svgFlipIn {
  0% { opacity: 0; transform: rotateY(180deg); }
  50% { opacity: 1; transform: rotateY(90deg); }
  100% { opacity: 1; transform: rotateY(0deg); }
}

/* Ensure inline SVG children participate in 3D transforms and use the SVG box
   as the transform reference so rotateY behaves as expected. Also hide
   backfaces for SVG text elements. */
.logo-container svg { transform-style: preserve-3d; }
.logo-container svg .kanji-main,
.logo-container svg .kanji-alt,
.logo-container svg .eng-main,
.logo-container svg .eng-alt {
  transform-box: fill-box; /* use the element's box for transform-origin */
  transform-origin: center center;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

/* New rules for SVG g groups to match image flip behavior */
.logo-container svg g {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transition: transform 0.35s cubic-bezier(.4,.0,.2,1), opacity 0.35s cubic-bezier(.4,.0,.2,1);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  transform-style: preserve-3d;
}

.kanji-primary, .eng-primary {
  opacity: 1;
  transform: rotateY(0deg);
  z-index: 2;
}

.kanji-secondary, .eng-secondary {
  opacity: 0;
  transform: rotateY(0deg);
  z-index: 1;
}

/* When flipped, swap the groups */
.logo-flip .kanji-primary, .logo-flip .eng-primary { opacity: 0; transform: rotateY(180deg); z-index: 1; }
.logo-flip .kanji-secondary, .logo-flip .eng-secondary { opacity: 1; transform: rotateY(0deg); z-index: 2; }

/* Keyframes for SVG text/element flip (used by the inline SVG on index.html)
   These were previously referenced but not defined; define simple rotateY/opactiy
   animations and ensure SVG text uses correct transform box/origin so 3D
   transforms behave similarly to the image-based flip used elsewhere. */
@keyframes svgFlipOut {
  0% { opacity: 1; transform: rotateY(0deg); }
  50% { opacity: 0; transform: rotateY(90deg); }
  100% { opacity: 0; transform: rotateY(180deg); }
}

@keyframes svgFlipIn {
  0% { opacity: 0; transform: rotateY(180deg); }
  50% { opacity: 1; transform: rotateY(90deg); }
  100% { opacity: 1; transform: rotateY(0deg); }
}

/* Ensure inline SVG children participate in 3D transforms and use the SVG box
   as the transform reference so rotateY behaves as expected. Also hide
   backfaces for SVG text elements. */
.logo-container svg { transform-style: preserve-3d; }
.logo-container svg .kanji-main,
.logo-container svg .kanji-alt,
.logo-container svg .eng-main,
.logo-container svg .eng-alt {
  transform-box: fill-box; /* use the element's box for transform-origin */
  transform-origin: center center;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

/* Persistent state using semantic classes */
.logo-flip-persist .kanji-main.kanji-visible { opacity: 0; transform: rotateY(90deg) scale(0.1); }
.logo-flip-persist .kanji-alt.kanji-hidden { opacity: 1; transform: rotateY(0deg) scale(0.1); }
.logo-flip-persist .eng-main.eng-visible { opacity: 0; transform: rotateY(90deg) scale(1); }
.logo-flip-persist .eng-alt.eng-hidden { opacity: 1; transform: rotateY(0deg) scale(1); }


.header-main h1 {
  font-size: 2rem;
  margin: 0;
  font-family: "Noto Serif JP", Arial, serif;
}
.header-sub {
  font-size: 1.1rem;
  color: #888;
  margin-left: 0.5em;
  font-weight: 400;
}
.header-nav a {
  color: #666;
  text-decoration: none;
  margin-left: 12px; /* reduced left margin so nav sits closer to logo */
  font-size: 1rem;
  font-weight: 400;
  padding: 8px 14px;
  border-radius: 20px;
  transition: all 0.3s ease;
  border: 1px solid transparent;
  font-family: "Noto Serif JP", Arial, serif;
}
.header-nav a:hover {
  color: #333;
  background: rgba(0,0,0,0.04);
  border-color: #e0e0e0;
  transform: translateY(-1px);
}
.lang-btn, .lang-separator {
  background: none;
  border: none;
  padding: 8px 12px;
  font-family: 'Noto Serif JP', serif;
  font-size: 1.8rem;
  font-weight: 400;
  color: #666;
  cursor: pointer;
  transition: all 0.3s ease;
  letter-spacing: 0.1em;
  border-radius: 6px;
}

.lang-btn:hover {
  color: #333;
  background: rgba(0,0,0,0.04);
  transform: translateY(-1px);
}

.lang-separator {
  cursor: default;
  padding: 8px 4px;
}
.lang-separator:hover {
  background: none;
  transform: none;
}
.lang-btn.active {
  color: #1976d2;
  font-weight: 400;
}
.lang-btn:hover:not(.active) {
  color: #333;
}
.lang-separator {
  color: #888;
  margin: 0 4px;
  cursor: default;
}
.filter-bar {
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
  justify-content: center;
  margin-bottom: 20px;
  padding: 15px 20px;
  border: 1px solid #eee;
  border-radius: 8px;
  background: #fafafa;
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
}
.filter-group {
  display: flex;
  gap: 6px;
  align-items: center;
}
.filter-btn {
  background: #f5f5f5;
  border: 1px solid #ddd;
  border-radius: 16px;
  padding: 4px 14px;
  font-size: 0.95rem;
  color: #333;
  cursor: pointer;
  transition: background 0.2s, border 0.2s;
}
.filter-btn.selected, .filter-btn:active {
  background: #1976d2;
  color: #fff;
  border-color: #1976d2;
}
.results-summary {
  text-align: left;
  font-size: 0.95rem;
  color: #555;
  margin: 8px 0 24px 0;
}

.spaces-header h1 {
  font-family: "Noto Serif JP", Arial, serif;
  font-size: 2rem;
  margin: 0;
  padding: 0;
}

.filter {
  margin-top: 10px;
}

.spaces-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 20px;
  width: 100%;
  max-width: 100%;
  padding: 0 20px;
  box-sizing: border-box;
}

.space-card {
  border: 1px solid #eee;
  border-radius: 8px;
  overflow: visible; /* allow tooltips to overflow */
  background: #fff;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  transition: transform 0.2s;
  cursor: pointer;
}

.space-card:hover {
  transform: translateY(-5px);
}

.space-image {
  width: 100%;
  height: 200px;
  object-fit: contain;
  background: #fff;
  display: block;
}

.space-info {
  padding: 15px;
}
.space-badges {
  margin: 0 0 8px 0;
  display: flex;
  flex-wrap: wrap;
  gap: 6px;
}
.badge {
  display: inline-block;
  font-size: 0.8rem;
  padding: 2px 10px;
  border-radius: 12px;
  background: #e3eafc;
  color: #1976d2;
  font-weight: 500;
  border: 1px solid #bbdefb;
}
.badge-location {
  background: #fff3e0;
  color: #ff9800;
  border: 1px solid #ffe0b2;
}
.badge-element {
  background: #e8f5e9;
  color: #388e3c;
  border: 1px solid #c8e6c9;
}
.badge-style {
  background: #fce4ec;
  color: #c2185b;
  border: 1px solid #f8bbd0;
}
.badge-tag {
  background: #f3e5f5;
  color: #7b1fa2;
  border: 1px solid #ce93d8;
}

.space-title {
  font-family: "Noto Serif JP", Arial, serif;
  font-size: 1.2rem;
  margin: 0 0 10px 0;
  font-weight: 400;
}

.space-description {
  font-size: 0.9rem;
  color: #666;
  margin: 0 0 10px 0;
}

.space-status {
  font-size: 0.8rem;
  font-weight: bold;
  color: #fff;
  padding: 5px 10px;
  border-radius: 4px;
  display: inline-block;
}

.status-available {
  background: #4CAF50;
}

.status-taken {
  background: #f44336;
}

/* Modal for space details */
.modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  background: rgba(0,0,0,0.45);
  align-items: center;
  justify-content: center;
}
.modal-content {
  background: #fff;
  margin: auto;
  padding: 24px 18px 18px 18px;
  border-radius: 10px;
  max-width: 500px;
  width: 95vw;
  box-shadow: 0 4px 24px rgba(0,0,0,0.18);
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: left;
  max-height: 90vh;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}
.modal-image {
  width: 100%;
  max-width: 90vw;
  max-height: 60vh;
  object-fit: contain;
  border-radius: 6px;
  margin-bottom: 1em;
}
.close {
  position: absolute;
  top: 12px;
  right: 18px;
  color: #888;
  font-size: 2rem;
  font-weight: normal;
  cursor: pointer;
  background: none;
  border: none;
  z-index: 10;
  transition: color 0.2s;
}
.close:hover {
  color: #f44336;
}
.modal-info h2 {
  font-size: 1.2rem;
  margin: 0 0 0.5em 0;
  font-family: "Noto Serif JP", Arial, serif;
}
.modal-info p {
  margin: 0.3em 0;
  font-size: 0.98rem;
}
.modal-contact {
  margin: 1em 0 0.5em 0;
  font-size: 1rem;
}
.modal-contact a {
  color: #1976d2;
  text-decoration: underline;
  margin: 0 0.5em 0 0;
}
.modal-instructions {
  margin: 1em 0 0.5em 0;
  font-size: 1rem;
  color: #333;
  font-weight: bold;
}
.modal-status {
  margin: 1em 0 0 0;
  font-size: 1.1rem;
  font-weight: bold;
  color: #b00;
}
/* Language switcher styles */
.lang-switcher {
  display: flex;
  align-items: center;
}
.lang-separator {
  color: #888;
  margin: 0 4px;
  font-size: 0.9em;
}
.lang-btn {
  background: none;
  border: none;
  padding: 0;
  font-size: 0.9em;
  color: #666;
  cursor: pointer;
  transition: color 0.2s;
  font-weight: normal;
}
.lang-btn.active {
  color: #1976d2;
  font-weight: bold;
}
.lang-btn:hover:not(.active) {
  color: #333;
}
@media (max-width: 600px) {
  .spaces-grid {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 15px;
  }
  .space-image {
    height: 150px;
    object-fit: contain;
    background: #fff;
  }
  .spaces-header h1, .header-main h1 {
    font-size: 1.2rem;
  }
  .header-sub {
    font-size: 0.9rem;
  }
  .header-left {
    flex-direction: column;
    align-items: flex-start;
    gap: 4px;
  }
  .lang-switcher {
    margin-top: 4px;
  }
  .filter-bar {
    flex-direction: column;
    align-items: flex-start;
    gap: 8px;
  }
  .modal-content {
    padding: 12px 4px 8px 4px;
    max-width: 98vw;
    max-height: 95vh;
  }
  .modal-image {
    max-width: 98vw;
    max-height: 40vh;
  }
}
